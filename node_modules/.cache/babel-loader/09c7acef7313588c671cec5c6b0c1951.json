{"ast":null,"code":"var _jsxFileName = \"/home/pournima/Desktop/Projects/react-weather-app/weather-app/src/components/temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style.css';\nimport WeatherCard from './weatherCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"Pune\");\n  const [tempInfo, setTempInfo] = useState(\" \");\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=68e77a4836eb61ea851985dd81ec94c6`;\n      const res = await fetch(url);\n      const data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      tempInfo: tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Temp, \"utwqfAIZ0sU7UxfE9hj3Fo1XZ4U=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useEffect","useState","WeatherCard","Temp","search","setSearch","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","console","log","e","target","value"],"sources":["/home/pournima/Desktop/Projects/react-weather-app/weather-app/src/components/temp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './style.css'\nimport WeatherCard from './weatherCard';\n\nconst Temp = () => {\n\n  const [search, setSearch] = useState(\"Pune\");\n  const [tempInfo, setTempInfo] = useState(\" \");\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=68e77a4836eb61ea851985dd81ec94c6`;\n\n      const res = await fetch(url);\n      const data = await res.json();\n\n      const {temp, humidity, pressure} = data.main;\n      const {main:weathermood} = data.weather[0];\n      const {name} = data;\n      const {speed} = data.wind;\n      const {country, sunset} = data.sys;\n      const myNewWeatherInfo = {\n        temp, humidity, pressure, weathermood, name, speed, country, sunset\n      }\n\n      setTempInfo(myNewWeatherInfo)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getWeatherInfo();\n  })\n  return (\n    <>\n      {/* Search  */}\n\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input type=\"search\" placeholder='search...' autoFocus id='search' className='searchTerm' value={search} onChange={(e) => setSearch(e.target.value)} />\n          <button className='searchButton' type='button' onClick={getWeatherInfo}>Search</button>\n        </div>\n      </div>\n\n      <WeatherCard tempInfo ={tempInfo}/>\n\n     </>\n  )\n}\n\nexport default Temp\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,MAAD,CAApC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,GAAD,CAAxC;;EAEA,MAAMO,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,IAAIC,GAAG,GAAI,qDAAoDL,MAAO,sDAAtE;MAEA,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;MACA,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MAEA,MAAM;QAACC,IAAD;QAAOC,QAAP;QAAiBC;MAAjB,IAA6BJ,IAAI,CAACK,IAAxC;MACA,MAAM;QAACA,IAAI,EAACC;MAAN,IAAqBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA3B;MACA,MAAM;QAACC;MAAD,IAASR,IAAf;MACA,MAAM;QAACS;MAAD,IAAUT,IAAI,CAACU,IAArB;MACA,MAAM;QAACC,OAAD;QAAUC;MAAV,IAAoBZ,IAAI,CAACa,GAA/B;MACA,MAAMC,gBAAgB,GAAG;QACvBZ,IADuB;QACjBC,QADiB;QACPC,QADO;QACGE,WADH;QACgBE,IADhB;QACsBC,KADtB;QAC6BE,OAD7B;QACsCC;MADtC,CAAzB;MAIAjB,WAAW,CAACmB,gBAAD,CAAX;IACD,CAhBD,CAgBE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CApBD;;EAqBA3B,SAAS,CAAC,MAAM;IACdQ,cAAc;EACf,CAFQ,CAAT;EAGA,oBACE;IAAA,wBAGE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE;UAAO,IAAI,EAAC,QAAZ;UAAqB,WAAW,EAAC,WAAjC;UAA6C,SAAS,MAAtD;UAAuD,EAAE,EAAC,QAA1D;UAAmE,SAAS,EAAC,YAA7E;UAA0F,KAAK,EAAEJ,MAAjG;UAAyG,QAAQ,EAAG0B,CAAD,IAAOzB,SAAS,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;QAAnI;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,SAAS,EAAC,cAAlB;UAAiC,IAAI,EAAC,QAAtC;UAA+C,OAAO,EAAExB,cAAxD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAUE,QAAC,WAAD;MAAa,QAAQ,EAAGF;IAAxB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA,gBADF;AAeD,CA5CD;;GAAMH,I;;KAAAA,I;AA8CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}